#include <iostream>
#include <string>
#define MAX 1000
using namespace std;
struct Person//联系人结构体 
{
	string m_Name;//姓名
	int m_Sex;//性别 1.男 2.女
	int m_Age;//年龄
	string m_Phone;//电话
	string m_Addr;//地址
};
struct Addressbooks
{
	struct Person personArray[MAX];//通讯录保存联系人数组
	int m_Size;//当前记录联系人个数
};
void addPerson(Addressbooks* abs)//1.添加联系人
{
	//判断通讯录是否已经满了，满了就不在添加
	if (abs->m_Size == MAX)
	{
		cout << "通讯录已满，无法添加！" << endl;
		return;
	}
	else
	{
		// 添加姓名
		string name;
		cout << "请输入姓名" << endl;
		cin >> name;
		abs->personArray[abs->m_Size].m_Name = name;//通讯录中有一个数组，[m_Size]记录人数数据，.name代表输入的是姓名
		// 性别
		cout << "请输入性别" << endl;
		cout << "1—男" << endl;
		cout << "2—女" << endl;
		int sex = 0;
		while (true)
		{
			cin >> sex;
			if (sex == 1 || sex == 2)
			{
				abs->personArray[abs->m_Size].m_Sex;
				break;
			}
			cout << "输入有误，请重新输入。" << endl;
		}
		// 年龄
		cout << "请输入年龄" << endl;
		int age = 0;
		cin >> age;
		abs->personArray[abs->m_Size].m_Age = age;
		// 电话
		cout << "请输入联系电话" << endl;
		string phone;
		cin >> phone;
		abs->personArray[abs->m_Size].m_Phone = phone;
		// 住址
		cout << "请输入家庭住址" << endl;
		string address;
		cin >> address;
		abs->personArray[abs->m_Size].m_Addr = address;
		abs->m_Size++;
		cout << "您已经添加成功" << endl;
		system("pause");//请按任意键继续
		system("cls");
	}
}
void showPerson(Addressbooks* abs)//2.显示联系人
{
	//判断通讯录中人数是否为0，如果为0则提示记录为空
	//如果不为0，显示记录的联系人信息
	if (abs->m_Size == 0)
	{
		cout << "当前记录为空" << endl;
	}
	else
	{
		for (int i = 0; i < abs->m_Size; i++)
		{
			cout << "姓名；  " << abs->personArray[i].m_Name << "\t";
			cout << "年龄；  " << abs->personArray[i].m_Age << "\t";
			cout << "性别:   " << (abs->personArray[i].m_Sex == 1 ? "男" : "女") << "\t";
			cout << "联系电话:   " << abs->personArray[i].m_Phone << "\t";
			cout << "家庭住址:   " << abs->personArray[i].m_Addr << "\t" << endl;
		}
	}
	system("pause");
	system("cls");
}
//检测联系人是否存在，如果存在，返回联系人所在数组的具体位置，不存在返回-1
int isExist(Addressbooks* abs, string name)
{
	for (int i = 0; i < abs->m_Size; i++)
	{
		if (abs->personArray[i].m_Name == name)
		{
			return i;
		}
	}
	return -1;
}
//3.删除联系人
void deletePerson(Addressbooks* abs)
{
	cout << "请输入您要删除的联系人" << endl;
	string name;
	cin >> name;
	int ret = isExist(abs, name);
	if (ret != -1)
	{
		//找到此人，执行删除
		for (int i = 0; i < abs->m_Size; i++)
		{
			abs->personArray[i] = abs->personArray[i + 1];//数据前移
		}
		abs->m_Size --;
		cout << "删除成功" << endl;
	}
	else
	{
		cout << "查无此人" << endl;
	}
	system("pause");
	system("cls");
}
//4.查找联系人
void findPerson(Addressbooks* abs)
{
	cout << "请输入您要查找的联系人" << endl;
	string name;
	cin >> name;
	//判断联系人是否存在
	int ret = isExist(abs, name);
	if (ret != -1)
	{
		cout << "姓名；  " << abs->personArray[ret].m_Name << "\t";
		cout << "年龄；  " << abs->personArray[ret].m_Age << "\t";
		cout << "性别:   " << (abs->personArray[ret].m_Sex==1? "男" : "女" )<< "\t";
		cout << "联系电话:   " << abs->personArray[ret].m_Phone << "\t";
		cout << "家庭住址:   " << abs->personArray[ret].m_Addr << "\t" << endl;
	}
	else
	{
		cout << "查无此人" << endl;
	}
	system("pause");
	system("cls");
}
void modifyPerson(Addressbooks* abs)
{
	cout << "请输入要修改的联系人" << endl;
	string name;
	cin >> name;
	int ret = isExist(abs, name);
	if (ret != -1)
	{
		string name;
		cout << "请输入姓名" << endl;
		cin >> name;
		abs->personArray[ret].m_Name = name;//姓名
		cout << "请输入性别" << endl;
		cout << "1.男" << endl;
		cout << "2.女" << endl;
		int sex = 0;
		while (true)
		{
			if (sex == 1 || sex == 2)
			{
				abs->personArray[ret].m_Sex = sex;
			}
			cout << "请重新输入" << endl;
		}//性别
		cout << "请输入年龄" << endl;
		int age = 0;
		cin >> age;
		abs->personArray[ret].m_Age = age;//年龄
		cout << "请输入联系电话" << endl;
		string phone;
		cin >> phone;
		abs->personArray[ret].m_Phone = phone;//电话
		cout << "请输入家庭地址" << endl;
		string address;
		cin >> address;
		abs->personArray[ret].m_Addr = address;//地址
		cout << "修改成功！" << endl;
	}
	else
	{
		cout << "查无此人" << endl;
	}
	system("pause");
	system("cls");
}
void cleanPerson(Addressbooks* abs)//6.清空通讯录
{
	abs->m_Size = 0;//将当前记录联系人数量重置为0，做逻辑清空
	cout << "通讯录已清空！"<<endl;
	system("pause");
	system("cls");

}
void showMenu()
{
	cout << "**************************" << endl;
	cout << "*****  1.添加联系人  *****" << endl;
	cout << "*****  2.显示联系人  *****" << endl;
	cout << "*****  3.删除联系人  *****" << endl;
	cout << "*****  4.查找联系人  *****" << endl;
	cout << "*****  5.修改联系人  *****" << endl;
	cout << "*****  6.清空联系人  *****" << endl;
	cout << "*****  0.退出通讯录  *****" << endl;
	cout << "**************************" << endl;

}
int main()
{
	//创建通讯录结构体变量
	Addressbooks abs;
	//初始化通讯录中当前人数个数
	abs.m_Size = 0;
	int select = 0;
	while (true)
	{
		showMenu();//菜单调用
		cin >> select;
		switch (select)
		{
		case 1:
			addPerson(&abs);//1.添加联系人
			break;
		case 2:
			showPerson(&abs);//2.显示联系人
			break;
		case 3:
			deletePerson(&abs);// 3.删除联系人  
			break;
		case 4:
			findPerson(&abs);//4.查找联系人 
			break;
		case 5: 
			modifyPerson(&abs);//5.修改联系人
			break;
		case 6:
			cleanPerson(&abs);//6.清空联系人 
			break;
		case 0:
			cout << "欢迎下次使用" << endl;
			system("pause");
			return 0;//0.推出通讯录 
			break;
		default:
			break;
		}

	}
	system("pause");
	return 0;
}
