#include <iostream>
#include <string>
using namespace std;
/*class Person
{
public:
	void setName(string name)//获取姓名
	{
		m_Name = name;
	}
	string getname()//输出姓名
	{
		return m_Name;
	}
	int getage()//获取年龄
	{
		//m_age = 0;年龄初始化
		return m_Age;
	}
	void setAge(int age)
	{
		if (age < 0 || age>150)
		{
			m_Age = 0;
			cout << "你个老妖精！" << endl;
			return;
		}
		m_Age = age; 
	}
	void setLover(string lover)
	{
		m_Lover = lover;
	}
private:
	string m_Name;//可读可写
	int m_Age;//可读可写有限制
	string m_Lover;//只写
};
/*int main()
{
	Person p;
	p.setName("罗昊");
	cout << "姓名为：" << p.getname() << endl;
	p.setAge(10000);
	cout << "年龄为：" << p.setAge() << endl;
	p.setLover("美女");
	system("pause");
	return 0;
}*/
class Cube
{
public:
	void setL(int L)
	{
		m_L = L;
	}
	int getL()
	{
		return m_L;
	}
	void setW(int W)
	{
		m_W = W;
	}
	int getW()
	{
		return m_W;
	}
	void setH(int H)
	{
		m_H = H;
	}
	int getH()
	{
		return m_H;
	}
	int calculateS()
	{
		return 2 * m_W * m_L + 2 * m_W * m_H + 2 * m_L * m_H;
	}
	int calculateV()
	{
		return m_W * m_H * m_L;
	}
	//利用成员函数来判断
	bool isSameByclass(Cube & c)
	{
		if (m_L == c.getL() && m_H == c.getH() && m_W == c.getW())
		{
			return true;
		}
		return false;
	}
private:
	int m_L;
	int m_W;
	int m_H;
};
//利用全局函数判断两个立方体是否相等
bool isSame(Cube& c1, Cube& c2)
{
	if (c1.getL() == c2.getL() && c1.getH() == c2.getH() && c1.getW() == c2.getW())
	{
		return true;
	}
	return false;
}
	
int main()
{
	Cube c1;
	c1.setH(10);
	c1.setL(10);
	c1.setW(10);
	cout << "c1的面积为：" << c1.calculateS() << endl;
	cout << "c1的体积为：" << c1.calculateV() << endl;
	Cube c2;
	c2.setH(10);
	c2.setL(10);
	c2.setW(10);
	bool ret = isSame(c1, c2);//全局函数判断
		if (ret)
		{
			cout << "c1和c2是相等的" << endl;
		}
		else
		{
			cout<< "c1和c2是不相等的" << endl;
		}
		ret = c1.isSameByclass(c2);//成员函数判断
	system("pause");
	return 0;
}
